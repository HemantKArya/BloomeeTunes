buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.25"
        println("üîç DEBUG: Updated Kotlin version to 1.9.25 for better compatibility")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'

subprojects {
    afterEvaluate { project ->
        println("üîç DEBUG: Evaluating project: ${project.name}")
        println("üîç DEBUG: Project path: ${project.path}")
        
        if (project.plugins.hasPlugin("com.android.application") ||
                project.plugins.hasPlugin("com.android.library")) {
            println("üîç DEBUG: ${project.name} has Android plugin")
            
            project.android {
                compileSdkVersion 35
                // Let NDK use latest version automatically - no hardcoded version
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
                
                // Fix for metadata_god namespace issue
                if (project.name == "metadata_god") {
                    println("üîß DEBUG: Applying comprehensive fix for metadata_god")
                    namespace = "com.ryanheise.metadata_god"
                    
                    // Create a custom AndroidManifest.xml for metadata_god
                    def customManifestDir = new File(project.buildDir, "generated/custom_manifest")
                    def customManifest = new File(customManifestDir, "AndroidManifest.xml")
                    
                    project.tasks.register("generateCustomManifest") {
                        doLast {
                            customManifestDir.mkdirs()
                            customManifest.text = '''<manifest xmlns:android="http://schemas.android.com/apk/res/android">
</manifest>'''
                            println("üîß DEBUG: Generated custom manifest for metadata_god")
                        }
                    }
                    
                    project.android.sourceSets.main.manifest.srcFile customManifest
                    project.tasks.named("preBuild").configure {
                        dependsOn("generateCustomManifest")
                    }
                }
            }
        }
        project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions {
                jvmTarget = '17'
            }
        }
    }
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
